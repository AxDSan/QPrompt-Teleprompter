set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_INCLUDE_CURRENT_DIRS ON)

set(qprompt_SRCS
    main.cpp
    prompter/documenthandler.cpp
    prompter/timer/promptertimer.cpp
    prompter/markersmodel.cpp
#    resources.qrc
)
# qt5_add_resources(qprompt_SRCS resources.qrc)
qtquick_compiler_add_resources(qprompt_SRCS resources.qrc) # Used to get static QML.

set(ICONS_FOLDER ${CMAKE_CURRENT_SOURCE_DIR}/icons/hicolor)
set(RASTER_ICONS
  ${ICONS_FOLDER}/16-apps-qprompt.png
  ${ICONS_FOLDER}/32-apps-qprompt.png
  ${ICONS_FOLDER}/48-apps-qprompt.png
  ${ICONS_FOLDER}/64-apps-qprompt.png
  ${ICONS_FOLDER}/128-apps-qprompt.png
  ${ICONS_FOLDER}/256-apps-qprompt.png
  ${ICONS_FOLDER}/512-apps-qprompt.png
  ${ICONS_FOLDER}/1024-apps-qprompt.png
)
set(VECTOR_ICON
  ${ICONS_FOLDER}/sc-apps-qprompt.svg
)
ecm_install_icons(
    ICONS
        ${RASTER_ICONS}
        ${VECTOR_ICON}
    DESTINATION ${KDE_INSTALL_ICONDIR}
)
ecm_add_app_icon(qprompt_SRCS
    ICONS ${RASTER_ICONS}
)

if (WIN32)
#     add_definitions(-D_AFXDLL)
#     set(CMAKE_MFC_FLAG 2)
#     set(app_icon_resource_windows "${CMAKE_CURRENT_SOURCE_DIR}/images/qprompt.png")
#     add_executable(qprompt WIN32 ${qprompt_SRCS} ${app_icon_resource_windows})
    # set(qprompt_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/images/qprompt.png")
    add_executable(qprompt WIN32 ${qprompt_SRCS})

elseif (APPLE)
    # These are substituted by CMake into plist.in.
    set(MACOSX_BUNDLE_DISPLAY_NAME "QPrompt")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_INFO_PLIST ${CMAKE_CURRENT_SOURCE_DIR}/Info.plist.in)
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_GUI_IDENTIFIER "com.cuperino.qprompt")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_BUNDLE_NAME "QPrompt")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_DISPLAY_NAME "QPrompt")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_INFO_STRING "QPrompt - Personal Teleprompter Software for Pros")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_LONG_VERSION_STRING "QPrompt ${RELEASE_SERVICE_VERSION}")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_SHORT_VERSION_STRING "${RELEASE_SERVICE_VERSION_MAJOR}.${RELEASE_SERVICE_VERSION_MINOR}")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_BUNDLE_VERSION "${RELEASE_SERVICE_VERSION}")
    set_target_properties(qprompt PROPERTIES MACOSX_BUNDLE_COPYRIGHT "2020-21 Javier O. Cordero PÃ©rez")
    # The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
    # generated by CMake. This variable contains the .icns file name,
    # without the path.
    set_target_properties(kdevelop PROPERTIES MACOSX_BUNDLE_ICON_FILE "qprompt.icns")
    #set_target_properties(kdevelop PROPERTIES MACOSX_BUNDLE_ICON_FILE "qprompt_SRCS.icns")
    #set(MACOSX_BUNDLE_ICON_FILE qprompt.icns)
    # And the following tells CMake where to find and install the file itself.
    set(app_icon_macos "${CMAKE_CURRENT_SOURCE_DIR}/icons/qprompt.icns")
    set_source_files_properties(${app_icon_macos} PROPERTIES MACOSX_PACKAGE_LOCATION "Resources")
    # 
    add_executable(qprompt MACOSX_BUNDLE ${qprompt_SRC} ${app_icon_macos})

else()
    add_executable(qprompt ${qprompt_SRC}) # Used to get static QML.
endif()
#add_executable(qprompt ${qprompt_SRC})
#add_executable(qprompt ${qprompt_SRC} ${RESOURCES}) # Used to get static QML.

target_link_libraries(qprompt
    Qt5::Core
    Qt5::Gui
    Qt5::Qml
    Qt5::Quick
    Qt5::QuickControls2
    Qt5::Widgets
    KF5::I18n
    KF5::Kirigami2
    KF5::CoreAddons
)
qt5_import_qml_plugins(qprompt) # Used to get static QML. Gets ignored if not a static build
install(FILES com.cuperino.qprompt.appdata.xml DESTINATION ${KDE_INSTALL_METAINFODIR})
# install(FILES images/qprompt.svg DESTINATION ${KDE_INSTALL_FULL_ICONDIR}/hicolor/scalable/apps)
install(FILES images/qprompt.png DESTINATION ${KDE_INSTALL_FULL_ICONDIR}/hicolor/1024x1024/apps)
install(TARGETS qprompt ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
ecm_install_icons(
    ICONS ${ICON_FILES}
    DESTINATION ${ICON_INSTALL_DIR}
    THEME hicolor
)
install(PROGRAMS com.cuperino.qprompt.desktop DESTINATION ${KDE_INSTALL_APPDIR})
